[[rpm]]
=== RPM으로 Kibana 설치

Kibana를 위한 RPM은 <<install-rpm,웹사이트에서 다운로드>>하거나 <<rpm-repo,RPM 리포지토리>>에서 다운로드할 수 있습니다. OpenSuSE, SLES, Centos, Red Hat, Oracle Enterprise 등 어떤 RPM 기반 시스템에서도 Kibana를 설치하는 데 사용할 수 있습니다.

NOTE: SLES 11 및 CentOS 5와 같이 오래된 버전의 RPM을 사용하는 배포판에서는 RPM 설치가 지원되지 않습니다. <<targz>>의 내용을 대신 참조하십시오.

Kibana의 최신 안정 버전은 link:/downloads/kibana[Kibana 다운로드] 페이지에서 구할 수 있습니다. 다른 버전은 link:/downloads/past-releases[이전 릴리스 페이지]에서 구할 수 있습니다.

[[rpm-key]]
==== Elastic PGP 키 가져오기

include::key.asciidoc[]

[source,sh]
-------------------------
rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch
-------------------------

[[rpm-repo]]
==== RPM 리포지토리에서 설치

ifeval::["{release-state}"=="unreleased"]

Kibana {version} 버전은 아직 릴리스되지 않았습니다.

endif::[]

ifeval::["{release-state}"!="unreleased"]

RedHat 기반 배포판은 `/etc/yum.repos.d/` 디렉토리에, OpenSuSE 기반 배포판은 `/etc/zypp/repos.d/` 디렉토리에 다음을 포함하는 `kibana.repo`라는 파일을 생성합니다.

ifeval::["{release-state}"=="released"]

["source","sh",subs="attributes,callouts"]
--------------------------------------------------
[kibana-{major-version}]
name=Kibana repository for {major-version} packages
baseurl=https://artifacts.elastic.co/packages/{major-version}/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=1
autorefresh=1
type=rpm-md
--------------------------------------------------

endif::[]

ifeval::["{release-state}"=="prerelease"]

["source","sh",subs="attributes,callouts"]
--------------------------------------------------
[kibana-{major-version}]
name=Kibana repository for {major-version} packages
baseurl=https://artifacts.elastic.co/packages/{major-version}-prerelease/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=1
autorefresh=1
type=rpm-md
--------------------------------------------------

endif::[]

그러면 리포지토리는 사용 가능한 상태가 됩니다. 이제 다음 명령 중 하나를 사용하여 Kibana를 설치할 수 있습니다.

[source,sh]
--------------------------------------------------
sudo yum install kibana <1>
sudo dnf install kibana <2>
sudo zypper install kibana <3>
--------------------------------------------------
<1> CentOS 및 오래된 RedHat 기반 배포판에서는 `yum`을 사용합니다.
<2> Fedora 및 다른 새로운 RedHat 배포판에서는 `dnf`를 사용합니다.
<3> OpenSUSE 기반 배포판에서는 `zypper`를 사용합니다.

endif::[]

[[install-rpm]]
==== RPM 다운로드 및 수동 설치

ifeval::["{release-state}"=="unreleased"]

Kibana {version} 버전은 아직 릴리스되지 않았습니다.

endif::[]

ifeval::["{release-state}"!="unreleased"]

Kibana v{version} RPM은 다음과 같이 웹 사이트에서 다운로드하고 설치할 수 있습니다.

*64비트:*
["source","sh",subs="attributes"]
--------------------------------------------
wget https://artifacts.elastic.co/downloads/kibana/kibana-{version}-x86_64.rpm
sha1sum kibana-{version}-x86_64.rpm <1>
sudo rpm --install kibana-{version}-x86_64.rpm
--------------------------------------------
<1> `sha1sum` 또는 `shasum`으로 생성된 SHA를 https://artifacts.elastic.co/downloads/kibana/kibana-{version}-x86_64.rpm.sha1[published SHA]와 비교합니다.

*32비트:*
["source","sh",subs="attributes"]
--------------------------------------------
wget https://artifacts.elastic.co/downloads/kibana/kibana-{version}-i686.rpm
sha1sum kibana-{version}-i686.rpm <1>
sudo rpm --install kibana-{version}-i686.rpm
--------------------------------------------
<1> `sha1sum` 또는 `shasum`으로 생성된 SHA를 https://artifacts.elastic.co/downloads/kibana/kibana-{version}-i686.rpm.sha1[published SHA]와 비교합니다.

endif::[]

include::init-systemd.asciidoc[]

[[rpm-running-init]]
==== SysV `init`로 Kibana 실행

시스템이 부팅될 때 Kibana가 자동으로 시작하도록 구성하려면 `chkconfig` 명령을 사용합니다.

[source,sh]
--------------------------------------------------
sudo chkconfig --add kibana
--------------------------------------------------

Kibana는 `service` 명령을 사용하여 시작하고 중지할 수 있습니다.

[source,sh]
--------------------------------------------
sudo -i service kibana start
sudo -i service kibana stop
--------------------------------------------

어떤 이유로든 Kibana가 시작하지 못하면 실패 이유가 STDOUT에 출력됩니다. 로그 파일은 `/var/log/kibana/`에서 찾을 수 있습니다.


[[rpm-running-systemd]]
include::systemd.asciidoc[]

[[rpm-configuring]]
==== 구성 파일을 통해 Kibana 구성

Kibana는 기본적으로 `/etc/kibana/kibana.yml` 파일로부터 구성을 로드합니다. 이 구성 파일의 형식에 대해서는 {kibana-ref}/settings.html[설정]의 설명을 참조하십시오.

[[rpm-layout]]
==== RPM의 디렉토리 레이아웃

RPM은 RPM 기반 시스템의 적합한 위치에 구성 파일, 로그, 데이터 디렉토리를 배치합니다.


[cols="<h,<,<m,<m",options="header",]
|=======================================================================
| 유형 | 설명 | 기본 위치 | 설정
| 홈
  | Kibana 홈 디렉토리, 즉 `$KIBANA_HOME`
  | /usr/share/kibana
 d|

| bin
  | Kibana 서버를 시작하기 위한 `kibana` 
    및 플러그인 설치를 위한 `kibana-plugin`을 포함하는 바이너리 스크립트
  | /usr/share/kibana/bin
 d|

| 구성
  | `kibana.yml`을 포함하는 구성 파일
  | /etc/kibana
 d|

| 데이터
  | Kibana 및 그 플러그인이 디스크에 기록하는 데이터 파일의 위치
  | /var/lib/kibana
 d|

| 최적화
  | 트랜스컴파일된 소스 코드. 일부 관리 작업(예: 플러그인 설치)에서는
    소스 코드가 즉시 다시 트랜스컴파일됩니다.
  | /usr/share/kibana/optimize
 d|

| 플러그인
  | 플러그인 파일 위치. 각 플러그인은 하위 디렉토리에 위치합니다.
  | /usr/share/kibana/plugins
 d|

|=======================================================================
